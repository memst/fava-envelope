"""
This type stub file was generated by pyright.
"""

"""
This type stub file was generated by pyright.
"""
__copyright__ = ...
__license__ = ...
HEAD_DETECT_MAX_BYTES = ...
class _FileMemo:
    """A file memoizer which acts as a cache for on-demand evaluation of conversions.

    Attributes:
      name: A string, the name of the underlying file.
    """
    def __init__(self, filename) -> None:
        ...
    
    def __str__(self) -> str:
        ...
    
    def convert(self, converter_func):
        """Registers a callable used to convert the file contents.
        Args:
          converter_func: A callable which accepts a filename and produces some
          derived version of the file contents.
        Returns:
          A bytes object, with the contents of the entire file.
        """
        ...
    
    def mimetype(self):
        """Computes the MIME type of the file."""
        ...
    
    def head(self, num_bytes=..., encoding=...):
        """An alias for reading just the first bytes of a file."""
        ...
    
    def contents(self):
        """An alias for reading the entire contents of the file."""
        ...
    


def mimetype(filename):
    """A converter that computes the MIME type of the file.

    Returns:
      A converter function.
    """
    ...

def head(num_bytes=..., encoding=...):
    """A converter that just reads the first bytes of a file.

    Note that the returned string may represent less bytes than
    specified if the encoded bytes read from the file terminate with
    an incomplete unicode character. This is likely to occur for
    variable width encodings suach as utf8.

    Args:
      num_bytes: The number of bytes to read.
    Returns:
      A converter function.

    """
    ...

def contents(filename):
    """A converter that just reads the entire contents of a file.

    Args:
      num_bytes: The number of bytes to read.
    Returns:
      A converter function.
    """
    ...

def get_file(filename):
    """Create or reuse a globally registered instance of a FileMemo.

    Note: the FileMemo objects' lifetimes are reused for the duration of the
    process. This is usually the intended behavior. Always create them by
    calling this constructor.

    Args:
      filename: A path string, the absolute name of the file whose memo to create.
    Returns:
      A FileMemo instance.

    """
    ...

_CACHE = ...

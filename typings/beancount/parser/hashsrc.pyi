"""
This type stub file was generated by pyright.
"""

import types

"""Compute a hash of the source files in order to warn when the source goes out of date.
"""
__copyright__ = ...
__license__ = ...
PARSER_SOURCE_FILES = ...
def hash_parser_source_files(): # -> str | None:
    """Compute a unique hash of the parser's Python code in order to bake that into
    the extension module. This is used at load-time to verify that the extension
    module and the corresponding Python codes match each other. If not, it
    issues a warning that you should rebuild your extension module.

    Returns:
      A string, the hexadecimal unique hash of relevant source code that should
      trigger a recompilation.
    """
    ...

def check_parser_source_files(parser_module: types.ModuleType): # -> None:
    """Check the extension module's source hash and issue a warning if the
    current source differs from that of the module.

    If the source files aren't located in the Python source directory, ignore
    the warning, we're probably running this from an installed based, in which
    case we don't need to check anything (this check is useful only for people
    running directly from source).
    """
    ...

def gen_include(): # -> str:
    """Generate an include file for the parser source hash."""
    ...

def main(): # -> None:
    ...

if __name__ == '__main__':
    ...

"""
This type stub file was generated by pyright.
"""

import enum
import unittest

__copyright__ = ...
__license__ = ...
class TestColumnRenderer(unittest.TestCase):
    def test_column_renderer(self): # -> None:
        ...
    


class RendererTestBase(unittest.TestCase):
    def setUp(self): # -> None:
        ...
    
    def render(self, dtype, values, **kwargs): # -> list[str]:
        ...
    


class Foo(enum.Enum):
    SHORT = ...
    LONG = ...


class TestRenderer(RendererTestBase):
    def test_object(self): # -> None:
        ...
    
    def test_bool(self): # -> None:
        ...
    
    def test_str(self): # -> None:
        ...
    
    def test_str_null(self): # -> None:
        ...
    
    def test_set_str(self): # -> None:
        ...
    
    def test_date(self): # -> None:
        ...
    
    def test_int(self): # -> None:
        ...
    
    def test_decimal_integral(self): # -> None:
        ...
    
    def test_decimal_fractional(self): # -> None:
        ...
    
    def test_enum(self): # -> None:
        ...
    


class TestAmountRenderer(RendererTestBase):
    def render(self, values, **kwargs): # -> list[str]:
        ...
    
    def test_amount(self): # -> None:
        ...
    
    def test_quantization_one(self): # -> None:
        ...
    
    def test_quantization_many(self): # -> None:
        ...
    
    def test_number_padding(self): # -> None:
        ...
    
    def test_decimal_alignment(self): # -> None:
        ...
    
    def test_currency_padding(self): # -> None:
        ...
    
    def test_many(self): # -> None:
        ...
    


class TestPositionRenderer(RendererTestBase):
    def render(self, values, **kwargs): # -> list[str]:
        ...
    
    def setUp(self): # -> None:
        ...
    
    def test_simple_poitions(self): # -> None:
        ...
    
    def test_positions_with_price(self): # -> None:
        ...
    


class TestInventoryRenderer(RendererTestBase):
    def render(self, values, **kwargs): # -> list[str]:
        ...
    
    def setUp(self): # -> None:
        ...
    
    def test_position_sortkey(self): # -> None:
        ...
    
    def test_inventory(self): # -> None:
        ...
    
    def test_inventory_tabular(self): # -> None:
        ...
    
    def test_inventory_too_many(self): # -> None:
        ...
    


class TestCostRenderer(RendererTestBase):
    def render(self, values, **kwargs): # -> list[str]:
        ...
    
    def test_cost(self): # -> None:
        ...
    


class TestQueryRenderText(unittest.TestCase):
    def setUp(self): # -> None:
        ...
    
    def render(self, types, rows, **kwargs): # -> str:
        ...
    
    def test_render_simple(self): # -> None:
        ...
    
    def test_render_simple_unicode(self): # -> None:
        ...
    
    def test_render_boxed(self): # -> None:
        ...
    
    def test_render_boxed_unicode(self): # -> None:
        ...
    
    def test_render_header_centering(self): # -> None:
        ...
    
    def test_render_header_truncation(self): # -> None:
        ...
    
    def test_render_missing_values(self): # -> None:
        ...
    
    def test_render_missing_values_boxed(self): # -> None:
        ...
    
    def test_render_expand(self): # -> None:
        ...
    
    def test_render_spaced(self): # -> None:
        ...
    


class TestQueryRenderCSV(unittest.TestCase):
    def setUp(self): # -> None:
        ...
    
    def render(self, types, rows, **kwargs): # -> str:
        ...
    
    def test_render_simple(self): # -> None:
        ...
    
    def test_render_missing(self): # -> None:
        ...
    
    def test_render_expand(self): # -> None:
        ...
    



"""
This type stub file was generated by pyright.
"""

from typing import Sequence

class Column(Sequence):
    __module__ = ...
    def __init__(self, name, datatype) -> None:
        ...
    
    _vars = ...
    def __eq__(self, other) -> bool:
        ...
    
    def __repr__(self): # -> str:
        ...
    
    def __len__(self): # -> Literal[7]:
        ...
    
    def __getitem__(self, key): # -> tuple[Any, ...]:
        ...
    
    @property
    def name(self): # -> Any:
        ...
    
    @property
    def datatype(self): # -> Any:
        ...
    
    @property
    def type_code(self): # -> int:
        ...
    
    @property
    def display_size(self): # -> None:
        ...
    
    @property
    def internal_size(self): # -> None:
        ...
    
    @property
    def precision(self): # -> None:
        ...
    
    @property
    def scale(self): # -> None:
        ...
    
    @property
    def null_ok(self): # -> None:
        ...
    


class Cursor:
    def __init__(self, connection) -> None:
        ...
    
    @property
    def connection(self): # -> Any:
        ...
    
    def execute(self, query, params=...): # -> Self:
        ...
    
    def executemany(self, query, params=...): # -> None:
        ...
    
    @property
    def description(self): # -> tuple[Column, ...] | None:
        ...
    
    @property
    def rowcount(self): # -> int:
        ...
    
    @property
    def rownumber(self): # -> int:
        ...
    
    def fetchone(self): # -> tuple[Any, ...] | None:
        ...
    
    def fetchmany(self, size=...): # -> list[Any] | list[tuple[Any, ...]]:
        ...
    
    def fetchall(self): # -> list[Any] | list[tuple[Any, ...]]:
        ...
    
    def close(self): # -> None:
        ...
    
    def setinputsizes(self, sizes): # -> None:
        ...
    
    def setoutputsize(self, size, column=...): # -> None:
        ...
    
    def __iter__(self): # -> Iterator[tuple[Any, ...]]:
        ...
    



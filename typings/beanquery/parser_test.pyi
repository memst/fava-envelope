"""
This type stub file was generated by pyright.
"""

import unittest

__copyright__ = ...
__license__ = ...
def Select(targets, from_clause=..., where_clause=..., **kwargs): # -> Any:
    ...

class QueryParserTestBase(unittest.TestCase):
    def parse(self, query):
        ...
    
    def assertParse(self, query, expected): # -> None:
        ...
    
    def assertParseTarget(self, query, expected): # -> None:
        ...
    
    def assertParseFrom(self, query, expected): # -> None:
        ...
    


class TestParseSelect(QueryParserTestBase):
    def test_select(self): # -> None:
        ...
    
    def test_literals(self): # -> None:
        ...
    
    def test_expressions(self): # -> None:
        ...
    
    def test_non_associative(self): # -> None:
        ...
    
    def test_complex_expressions(self): # -> None:
        ...
    


class TestSelectPrecedence(QueryParserTestBase):
    def test_operators_precedence(self): # -> None:
        ...
    


class TestSelectFrom(QueryParserTestBase):
    def test_select_from(self): # -> None:
        ...
    


class TestSelectWhere(QueryParserTestBase):
    def test_where(self): # -> None:
        ...
    


class TestSelectFromAndWhere(QueryParserTestBase):
    def test_from_and_where(self): # -> None:
        ...
    


class TestSelectFromSelect(QueryParserTestBase):
    def test_from_select(self): # -> None:
        ...
    


class TestSelectGroupBy(QueryParserTestBase):
    def test_groupby_one(self): # -> None:
        ...
    
    def test_groupby_many(self): # -> None:
        ...
    
    def test_groupby_expr(self): # -> None:
        ...
    
    def test_groupby_having(self): # -> None:
        ...
    
    def test_groupby_numbers(self): # -> None:
        ...
    
    def test_groupby_empty(self): # -> None:
        ...
    


class TestSelectOrderBy(QueryParserTestBase):
    def test_orderby_one(self): # -> None:
        ...
    
    def test_orderby_many(self): # -> None:
        ...
    
    def test_orderby_asc(self): # -> None:
        ...
    
    def test_orderby_desc(self): # -> None:
        ...
    
    def test_orderby_many_asc_desc(self): # -> None:
        ...
    
    def test_orderby_empty(self): # -> None:
        ...
    


class TestSelectPivotBy(QueryParserTestBase):
    def test_pivotby(self): # -> None:
        ...
    


class TestSelectOptions(QueryParserTestBase):
    def test_distinct(self): # -> None:
        ...
    
    def test_limit_present(self): # -> None:
        ...
    
    def test_limit_empty(self): # -> None:
        ...
    


class TestBalances(QueryParserTestBase):
    def test_balances_empty(self): # -> None:
        ...
    
    def test_balances_from(self): # -> None:
        ...
    
    def test_balances_from_with_transformer(self): # -> None:
        ...
    
    def test_balances_from_with_transformer_simple(self): # -> None:
        ...
    


class TestJournal(QueryParserTestBase):
    def test_journal_empty(self): # -> None:
        ...
    
    def test_journal_account(self): # -> None:
        ...
    
    def test_journal_summary(self): # -> None:
        ...
    
    def test_journal_account_and_summary(self): # -> None:
        ...
    
    def test_journal_from(self): # -> None:
        ...
    


class TestPrint(QueryParserTestBase):
    def test_print_empty(self): # -> None:
        ...
    
    def test_print_from(self): # -> None:
        ...
    


class TestComments(QueryParserTestBase):
    def test_comments(self): # -> None:
        ...
    


class TestRepr(unittest.TestCase):
    def test_ordering(self): # -> None:
        ...
    
    def test_ast_node(self): # -> None:
        ...
    
    def test_tosexp(self): # -> None:
        ...
    
    def test_walk(self): # -> None:
        ...
    


class TestNodeText(unittest.TestCase):
    def test_text(self): # -> None:
        ...
    
    def test_synthetic(self): # -> None:
        ...
    


